{
    "docs": [
        {
            "location": "/",
            "text": "\u00bfQu\u00e9 es Zabbix?\n\n\nZabbix\n es un software de monitorizaci\u00f3n de equipos en red, basado en \nsoftware abierto\n recaba informaci\u00f3n de los sistemas controlados por un agente y muestra la informaci\u00f3n centralizada en un frontend Web en el servidor.\n\n\nCaracter\u00edsticas principales\n\n\nZabbix ofrece una soluci\u00f3n \nflexible\n que permite monitorizar diferentes infraestructuras y elementos presentes en una red. El estudio de los \ncasos de uso\n y sus aplicaciones practicas que describen en la Web oficial dan una idea de su capacidad de adaptaci\u00f3n. \nUno de los casos m\u00e1s comunes es evidentemente monitorizar servidores y servicios cr\u00edticos\n de una empresa, este caso ser\u00e1 el m\u00e1s estudiado en este manual que lees.\n\n\nUno de los fuertes de Zabbix es una interface Web del servidor muy cuidada donde se presenta la informaci\u00f3n con diferentes vistas y formatos, cuadro de mando central, gr\u00e1ficos, mapas de red, reportes.\n\n\n\n\nPara recolectar los datos necesarios en el servidor existen agentes que funcionan como clientes para diferentes sistemas operativos, \nel agente se instala como servicio o demonio (se ejeucta en segundo plano), es muy liviano y consume muy pocos recursos, la configuraci\u00f3n del agente se realiza en un fichero de texto plano lo que hace que el agente sea altamente portable\n. El agente ya contempla una serie de checks o items a monitorizar como por ejemplo: interface de red, CPU, memoria, disco, sistema, logs... (\nver lista completa en la Web oficial\n). Pero adem\u00e1s de eso lo que lo hace muy flexible es que \nel usuario puede definir par\u00e1metros personalizados\n.\n\n\nCuando instalamos el servidor viene \nprecargado con plantillas (templates) para los tipos de sistemas operativos del agente m\u00e1s t\u00edpicos\n, MS Windows server, Win7, m\u00e1quinas virtualizadas, etc.. Las plantillas contienen items o elementos que podemos modificar o a\u00f1adir nuevos para monitorizar nuevos par\u00e1metros no contemplados.",
            "title": "Inicio"
        },
        {
            "location": "/#que-es-zabbix",
            "text": "Zabbix  es un software de monitorizaci\u00f3n de equipos en red, basado en  software abierto  recaba informaci\u00f3n de los sistemas controlados por un agente y muestra la informaci\u00f3n centralizada en un frontend Web en el servidor.",
            "title": "\u00bfQu\u00e9 es Zabbix?"
        },
        {
            "location": "/#caracteristicas-principales",
            "text": "Zabbix ofrece una soluci\u00f3n  flexible  que permite monitorizar diferentes infraestructuras y elementos presentes en una red. El estudio de los  casos de uso  y sus aplicaciones practicas que describen en la Web oficial dan una idea de su capacidad de adaptaci\u00f3n.  Uno de los casos m\u00e1s comunes es evidentemente monitorizar servidores y servicios cr\u00edticos  de una empresa, este caso ser\u00e1 el m\u00e1s estudiado en este manual que lees.  Uno de los fuertes de Zabbix es una interface Web del servidor muy cuidada donde se presenta la informaci\u00f3n con diferentes vistas y formatos, cuadro de mando central, gr\u00e1ficos, mapas de red, reportes.   Para recolectar los datos necesarios en el servidor existen agentes que funcionan como clientes para diferentes sistemas operativos,  el agente se instala como servicio o demonio (se ejeucta en segundo plano), es muy liviano y consume muy pocos recursos, la configuraci\u00f3n del agente se realiza en un fichero de texto plano lo que hace que el agente sea altamente portable . El agente ya contempla una serie de checks o items a monitorizar como por ejemplo: interface de red, CPU, memoria, disco, sistema, logs... ( ver lista completa en la Web oficial ). Pero adem\u00e1s de eso lo que lo hace muy flexible es que  el usuario puede definir par\u00e1metros personalizados .  Cuando instalamos el servidor viene  precargado con plantillas (templates) para los tipos de sistemas operativos del agente m\u00e1s t\u00edpicos , MS Windows server, Win7, m\u00e1quinas virtualizadas, etc.. Las plantillas contienen items o elementos que podemos modificar o a\u00f1adir nuevos para monitorizar nuevos par\u00e1metros no contemplados.",
            "title": "Caracter\u00edsticas principales"
        },
        {
            "location": "/general/descripcion_general/",
            "text": "",
            "title": "Descripci\u00f3n general"
        },
        {
            "location": "/server/instalacion_ubuntu_vbox/",
            "text": "M\u00e1quina Virtual Virtual Box con Ubuntu\n\n\nLa forma m\u00e1s f\u00e1cil y r\u00e1pida de empezar es crear un servidor de Zabbix virtualizado, \ndescargamos\n una imagen ya creada para VBox de \nUbuntu 16.04.3 LTS (Xenial)\n de la Web de \nOSBoxes.org\n. \n\n\nYo estoy usando Debian 9  \u201cStretch\u201d como anfitrion y VBox Version 5.1.32.\n\n\n\n\nDatos de la imagen:\n\n\n\n\nUbuntu 16.04.3 Xenial.\n\n\nVirtualBox (VDI) 32bit.\n\n\nSHA256: 0d94f64ffe926bf7fa995fcc7bc66897ad4cfcc86532fafcb927dafcf69d76e5\n\n\nDescarga\n.\n\n\nUsername: osboxes\n\n\nPassword: osboxes.org\n\n\nVB Guest Additions & VMware Tools: Not Installed\n\n\nVMware Compatibility: Version 10+\n\n\n\n\nLa imagen para VBox con extensi\u00f3n '.vdi' requiere que creemos la m\u00e1quina Linux previamente en VBox y seleccionar el archivo 'Ubuntu 16.04.3 (32bit).vdi' como disco duro.\n\n\nEn pocos minutos est\u00e1 corriendo mi m\u00e1quina virtual que albergara el servidor Zabbix.\n\n\n\n\nAntes de empezar instalar servidor OpenSSH:\n\n\n# apt-get install openssh-server\n\n\n\n\nInstalaci\u00f3n Zabbix con paquetes\n\n\nExisten varias formas de instalaci\u00f3n pero la m\u00e1s recomendada es usar los paquetes que existen para cada tipo de distribuci\u00f3n Linux: Debian, RedHat o Ubuntu.\n\n\nExiste un \nrepositorio oficial\n con los paquetes ordenados por distribuci\u00f3n y todas las versiones disponibles de Zabbix.\n\n\n\n\nPara Ubuntu los comandos que debemos introducir son los siguientes:\n\n\n# wget http://repo.zabbix.com/zabbix/3.2/ubuntu/pool/main/z/zabbix-release/zabbix-release_3.2-1+xenial_all.deb\n# dpkg -i zabbix-release_3.2-1+xenial_all.deb\n# apt-get update\n\n\n\n\nAhora ya estamos preparados para instalar el servidor Zabbix usando MySQL o PostreSQL, yo usare MySQL omo gestor de base de datos. \n\n\n# apt-get install zabbix-server-mysql zabbix-frontend-php\n\n\n\n\nCreando la base de datos\n\n\n# mysql -uroot -posboxes.org\nMariaBD[(none)]> create database zabbix character set utf8 collate utf8_bin;\nMariaBD[(none)]> grant all privileges on zabbix.* to zabbix@localhost identified by 'osboxes.org';\nMariaBD[(none)]> quit\n# zcat /usr/share/doc/zabbix-server-mysql/create.sql.gz | mysql -uzabbix -p zabbix-release\n\n\n\n\n\n\nAlgunos comandos en MySQL:\n\n\n# mysql -uroot -posboxes.org\nMariaBD[(none)]> show databases;\nMariaBD[(none)]> use zabbix;\nMariaBD[(none)]> show tables;\n\n\n\n\nConfigurando el demonio servidor Zabbix\n\n\nEditamos el siguiente fichero y modificamos los par\u00e1metros de configuraci\u00f3n de acceso a la BD MySQL.\n\n\n# nano /etc/zabbix/zabbix_server.conf\nDBHost=localhost\nDBName=zabbix\nDBUser=zabbix\nDBPassword=osboxes.org\n\n\n\n\nArrancando el servicio\n\n\nArrancamos el servicio y configuramos para que arranque de forma autom\u00e1tica con el arranque del sistema operativo.\n\n\n# service zabbix-server start\n# service zabbix-server status\n# update-rc.d zabbix-server enable\n# service apache2 restart\n\n\n\n\nInstalaci\u00f3n frontend PHP\n\n\nAntes de comenzar con el proceso de instalaci\u00f3n es recomendable editar \n/etc/apache2/conf-enabled/zabbix.conf\n y al menos establecer la zona horaria (\nset the right timezone \n).\n\n\n\n\nAhora podemos acceder al frontend de Zabbix en la URL http://\n/zabbix:\n\n\n\n\nHe instalado algunos paquetes adicionales para satisfacer algunos requisitos del servidor:\n\n\n$ sudo apt install php7.0-bcmath\n$ sudo apt-get install php7.0-mbstring\n$ sudo apt-get install php7.0-xml\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAdvertencia: El usuario es \u201cAdmin\u201d con clave \u201czabbix\u201d.\n\n\n\n\nEnlaces externos\n\n\n\n\nOficial \nZabbix Documentation 3.2\n.",
            "title": "Instalaci\u00f3n - Ubuntu 16.04 - VBox"
        },
        {
            "location": "/server/instalacion_ubuntu_vbox/#maquina-virtual-virtual-box-con-ubuntu",
            "text": "La forma m\u00e1s f\u00e1cil y r\u00e1pida de empezar es crear un servidor de Zabbix virtualizado,  descargamos  una imagen ya creada para VBox de  Ubuntu 16.04.3 LTS (Xenial)  de la Web de  OSBoxes.org .   Yo estoy usando Debian 9  \u201cStretch\u201d como anfitrion y VBox Version 5.1.32.   Datos de la imagen:   Ubuntu 16.04.3 Xenial.  VirtualBox (VDI) 32bit.  SHA256: 0d94f64ffe926bf7fa995fcc7bc66897ad4cfcc86532fafcb927dafcf69d76e5  Descarga .  Username: osboxes  Password: osboxes.org  VB Guest Additions & VMware Tools: Not Installed  VMware Compatibility: Version 10+   La imagen para VBox con extensi\u00f3n '.vdi' requiere que creemos la m\u00e1quina Linux previamente en VBox y seleccionar el archivo 'Ubuntu 16.04.3 (32bit).vdi' como disco duro.  En pocos minutos est\u00e1 corriendo mi m\u00e1quina virtual que albergara el servidor Zabbix.   Antes de empezar instalar servidor OpenSSH:  # apt-get install openssh-server",
            "title": "M\u00e1quina Virtual Virtual Box con Ubuntu"
        },
        {
            "location": "/server/instalacion_ubuntu_vbox/#instalacion-zabbix-con-paquetes",
            "text": "Existen varias formas de instalaci\u00f3n pero la m\u00e1s recomendada es usar los paquetes que existen para cada tipo de distribuci\u00f3n Linux: Debian, RedHat o Ubuntu.  Existe un  repositorio oficial  con los paquetes ordenados por distribuci\u00f3n y todas las versiones disponibles de Zabbix.   Para Ubuntu los comandos que debemos introducir son los siguientes:  # wget http://repo.zabbix.com/zabbix/3.2/ubuntu/pool/main/z/zabbix-release/zabbix-release_3.2-1+xenial_all.deb\n# dpkg -i zabbix-release_3.2-1+xenial_all.deb\n# apt-get update  Ahora ya estamos preparados para instalar el servidor Zabbix usando MySQL o PostreSQL, yo usare MySQL omo gestor de base de datos.   # apt-get install zabbix-server-mysql zabbix-frontend-php  Creando la base de datos  # mysql -uroot -posboxes.org\nMariaBD[(none)]> create database zabbix character set utf8 collate utf8_bin;\nMariaBD[(none)]> grant all privileges on zabbix.* to zabbix@localhost identified by 'osboxes.org';\nMariaBD[(none)]> quit\n# zcat /usr/share/doc/zabbix-server-mysql/create.sql.gz | mysql -uzabbix -p zabbix-release   Algunos comandos en MySQL:  # mysql -uroot -posboxes.org\nMariaBD[(none)]> show databases;\nMariaBD[(none)]> use zabbix;\nMariaBD[(none)]> show tables;",
            "title": "Instalaci\u00f3n Zabbix con paquetes"
        },
        {
            "location": "/server/instalacion_ubuntu_vbox/#configurando-el-demonio-servidor-zabbix",
            "text": "Editamos el siguiente fichero y modificamos los par\u00e1metros de configuraci\u00f3n de acceso a la BD MySQL.  # nano /etc/zabbix/zabbix_server.conf\nDBHost=localhost\nDBName=zabbix\nDBUser=zabbix\nDBPassword=osboxes.org",
            "title": "Configurando el demonio servidor Zabbix"
        },
        {
            "location": "/server/instalacion_ubuntu_vbox/#arrancando-el-servicio",
            "text": "Arrancamos el servicio y configuramos para que arranque de forma autom\u00e1tica con el arranque del sistema operativo.  # service zabbix-server start\n# service zabbix-server status\n# update-rc.d zabbix-server enable\n# service apache2 restart",
            "title": "Arrancando el servicio"
        },
        {
            "location": "/server/instalacion_ubuntu_vbox/#instalacion-frontend-php",
            "text": "Antes de comenzar con el proceso de instalaci\u00f3n es recomendable editar  /etc/apache2/conf-enabled/zabbix.conf  y al menos establecer la zona horaria ( set the right timezone  ).   Ahora podemos acceder al frontend de Zabbix en la URL http:// /zabbix:   He instalado algunos paquetes adicionales para satisfacer algunos requisitos del servidor:  $ sudo apt install php7.0-bcmath\n$ sudo apt-get install php7.0-mbstring\n$ sudo apt-get install php7.0-xml       Advertencia: El usuario es \u201cAdmin\u201d con clave \u201czabbix\u201d.",
            "title": "Instalaci\u00f3n frontend PHP"
        },
        {
            "location": "/server/instalacion_ubuntu_vbox/#enlaces-externos",
            "text": "Oficial  Zabbix Documentation 3.2 .",
            "title": "Enlaces externos"
        },
        {
            "location": "/server/problemas/",
            "text": "Puerto local del servidor Zabbix\n\n\nEl servidor Zabbix usa normalmente el puerto 10050/10051 por defecto para comunicarse con los agentes, en caso de problemas una de las pruebas m\u00e1s b\u00e1sicas es comprobar que el puerto esta abierto y accesible desde la red, a menudo las IPTABLES de Linux o el FW de MS Win lo bloquean.\n\n\nPara detectar los puertos TCP abiertos ejecutamos \nnestat\n en el servidor (conexi\u00f3n SSH), entre los resultados deber\u00eda figurar el puerto 10051:\n\n\n$ netstat -vatn \n\n\n\n\n\n\nOtra prueba un poco m\u00e1s intrusiva es conectarnos directamente al puerto usando Telnet, la conexi\u00f3n se interrumpe pero se observa que por un momento se ha abierto, si lo hacemos desde el propio servidor (lo bonito es hacerlo desde otra m\u00e1quina para descartar tambi\u00e9n problemas de red):\n\n\n$ telnet 127.0.0.1 10051\n\n\n\n\n\n\nDemonio Zabbix\n\n\nLogicamente para que el servidor funcione debe estar el demonio o servicio arrancado. El script de arranque del servicio se encuentra en la siguiente ruta: \n/etc/init.d/zabbix-server\n.\n\n\nPodemos comprobar si el proceso \nzabbix_server\n est\u00e1 corriendo con el siguiente comando:\n\n\nosboxes@osboxes:~$ ps -ax | grep \"zabbix_server\"\n13601 ?        S      0:00 /usr/sbin/zabbix_server -c /etc/zabbix/zabbix_server.conf\n13603 ?        S      0:19 /usr/sbin/zabbix_server: configuration syncer [synced configuration in 0.010576 sec, idle 60 sec]\n13604 ?        S      0:09 /usr/sbin/zabbix_server: db watchdog [synced alerts config in 0.000973 sec, idle 60 sec]\n13605 ?        S      0:13 /usr/sbin/zabbix_server: poller #1 [got 0 values in 0.000013 sec, idle 5 sec]\n13606 ?        S      0:13 /usr/sbin/zabbix_server: poller #2 [got 0 values in 0.000010 sec, idle 5 sec]\n13607 ?        S      0:13 /usr/sbin/zabbix_server: poller #3 [got 0 values in 0.000011 sec, idle 5 sec]\n13608 ?        S      0:13 /usr/sbin/zabbix_server: poller #4 [got 0 values in 0.000012 sec, idle 5 sec]\n13609 ?        S      0:12 /usr/sbin/zabbix_server: poller #5 [got 0 values in 0.000010 sec, idle 5 sec]\n13610 ?        S      0:15 /usr/sbin/zabbix_server: unreachable poller #1 [got 0 values in 0.000014 sec, idle 5 sec]\n13611 ?        S      0:00 /usr/sbin/zabbix_server: trapper #1 [processed data in 0.000008 sec, waiting for connection]\n13612 ?        S      0:00 /usr/sbin/zabbix_server: trapper #2 [processed data in 0.000015 sec, waiting for connection]\n13613 ?        S      0:00 /usr/sbin/zabbix_server: trapper #3 [processed data in 0.000009 sec, waiting for connection]\n13614 ?        S      0:00 /usr/sbin/zabbix_server: trapper #4 [processed data in 0.000009 sec, waiting for connection]\n13615 ?        S      0:00 /usr/sbin/zabbix_server: trapper #5 [processed data in 0.000020 sec, waiting for connection]\n13616 ?        S      0:10 /usr/sbin/zabbix_server: icmp pinger #1 [got 0 values in 0.000010 sec, idle 5 sec]\n13617 ?        S      0:08 /usr/sbin/zabbix_server: alerter [sent alerts: 0 success, 0 fail in 0.000221 sec, idle 30 sec]\n13618 ?        S      0:07 /usr/sbin/zabbix_server: housekeeper [deleted 0 hist/trends, 0 items/triggers, 0 events, 0 sessions, 0 alarms, 0 audit items in 0.032341 sec, idle for 1 hour(s)]\n13619 ?        S      0:11 /usr/sbin/zabbix_server: timer #1 [processed 1 triggers, 0 events in 0.000201 sec, 0 maintenances in 0.000686 sec, idle 30 sec]\n13620 ?        S      0:20 /usr/sbin/zabbix_server: http poller #1 [got 0 values in 0.000951 sec, idle 5 sec]\n13621 ?        S      0:08 /usr/sbin/zabbix_server: discoverer #1 [processed 0 rules in 0.001172 sec, idle 60 sec]\n13622 ?        S      0:22 /usr/sbin/zabbix_server: history syncer #1 [synced 0 items in 0.000004 sec, idle 1 sec]\n13623 ?        S      0:22 /usr/sbin/zabbix_server: history syncer #2 [synced 0 items in 0.000002 sec, idle 1 sec]\n13624 ?        S      0:22 /usr/sbin/zabbix_server: history syncer #3 [synced 0 items in 0.000002 sec, idle 1 sec]\n13625 ?        S      0:22 /usr/sbin/zabbix_server: history syncer #4 [synced 0 items in 0.000002 sec, idle 1 sec]\n13626 ?        S      0:30 /usr/sbin/zabbix_server: escalator #1 [processed 0 escalations in 0.000405 sec, idle 3 sec]\n13627 ?        S      0:11 /usr/sbin/zabbix_server: proxy poller #1 [exchanged data with 0 proxies in 0.000009 sec, idle 5 sec]\n13628 ?        S      0:22 /usr/sbin/zabbix_server: self-monitoring [processed data in 0.000011 sec, idle 1 sec]\n13629 ?        S      0:15 /usr/sbin/zabbix_server: task manager [processed 0 task(s) in 0.000139 sec, idle 5 sec]\n20539 pts/17   S+     0:00 grep --color=auto zabbix_server\n\n\n\n\nLa primera l\u00ednea del resultado nos permite ver que el binario ejecutable \nzabbix_server\n carga la configuraci\u00f3n de \n/etc/zabbix/zabbix_server.conf\n.\n \n\n\n\n\nOtros procesos a tomar en cuenta son el servidor HTTP Apache (\napache2\n) y la BD Mysql (\nmysqld\n).\n\n\nEl script \nzabbix-server\n acepta par\u00e1metros como \n[start|stop|refresh]\n para controlar el demonio.\n\n\nEl siguiente comando obtiene informaci\u00f3n del estado del servicio, por ejemplo su estado y desde cuando lleva arrancado:\n\n\n$ service zabbix-server status\n\n\n\n\n\n\nConfiguraci\u00f3n servidor Zabbix zabbix_server.conf\n\n\nPar\u00e1metros:\n\n\n\n\nListenPort\n: Por defecto siempre ser\u00e1 10051 a no ser que lo cambiemos, normalmente no ser\u00e1 necesario cambiarlo a no ser que alg\u00fan otro servicio lo estuviera ocupando.\n\n\nSourceIP\n: Direcci\u00f3n de red del servidor.\n\n\nLogType\n: Sistema de logs (por defecto a fichero).\n\n\nLogFile\n: Fichero de log normalmente \n/var/log/zabbix/zabbix_server.log\n. \n\n\nDebugLevel\n: Normalmente con valor 3 para guardar logs de warning y error, con prop\u00f3sitos de debugear alg\u00fan error podemos modificarlo a 4 o 5 para que muestre informaci\u00f3n detallada de la ejecuci\u00f3n del servidor.\n\n\nPidFile\n: Archivo con el identificador del proceso del servidor, normalmente \n/var/run/zabbix/zabbix_server.pid\n, si queremos ver el PID del proceso principal podemos hacerlo con \nmore /var/run/zabbix/zabbix_server.pid\n. \n\n\nA continuaci\u00f3n especifica la conexi\u00f3n a la BD: \nDBHost\n, \nDBName\n, \nDBSchema\n, \nDBUser\n (normalmente 'zabbix'), \nDBPassword\n (en mi caso 'osboxes.org'), \nDBSocket\n, \nDBPort\n (en MySQL por defecto suele ser 3306).\n\n\n\n\nEl fichero sigue con otros par\u00e1metros avanzados que ire comentando en cada caso. Por ejemplo la variable \nAlertScriptsPath\n ser\u00e1 de gran inter\u00e9s ya que indica la ruta para definir scripts de alerta personalizados.\n\n\nLogs del servidor Zabbix\n\n\nosboxes@osboxes:~$ sudo  more /var/log/zabbix/zabbix_server.log\n\n\n\n\nFrontent PHP y Apache\n\n\nZabbix usa Apache como servidor HTTP para administrar el servidor Zabbix desde un interface Web desarrollado con PHP.\n\n\nEn la ruta \n/etc/zabbix/\n se encuentran algunos archivos de inter\u00e9s.\n\n\n/etc/zabbix/apache.conf\n: Fichero de configuraci\u00f3n de la Web para Apache. Las primeras l\u00edneas indican donde est\u00e1n los archivos del sitio Web en \n/usr/share/zabbix\n.",
            "title": "Diagn\u00f3stico de problemas"
        },
        {
            "location": "/server/problemas/#puerto-local-del-servidor-zabbix",
            "text": "El servidor Zabbix usa normalmente el puerto 10050/10051 por defecto para comunicarse con los agentes, en caso de problemas una de las pruebas m\u00e1s b\u00e1sicas es comprobar que el puerto esta abierto y accesible desde la red, a menudo las IPTABLES de Linux o el FW de MS Win lo bloquean.  Para detectar los puertos TCP abiertos ejecutamos  nestat  en el servidor (conexi\u00f3n SSH), entre los resultados deber\u00eda figurar el puerto 10051:  $ netstat -vatn    Otra prueba un poco m\u00e1s intrusiva es conectarnos directamente al puerto usando Telnet, la conexi\u00f3n se interrumpe pero se observa que por un momento se ha abierto, si lo hacemos desde el propio servidor (lo bonito es hacerlo desde otra m\u00e1quina para descartar tambi\u00e9n problemas de red):  $ telnet 127.0.0.1 10051",
            "title": "Puerto local del servidor Zabbix"
        },
        {
            "location": "/server/problemas/#demonio-zabbix",
            "text": "Logicamente para que el servidor funcione debe estar el demonio o servicio arrancado. El script de arranque del servicio se encuentra en la siguiente ruta:  /etc/init.d/zabbix-server .  Podemos comprobar si el proceso  zabbix_server  est\u00e1 corriendo con el siguiente comando:  osboxes@osboxes:~$ ps -ax | grep \"zabbix_server\"\n13601 ?        S      0:00 /usr/sbin/zabbix_server -c /etc/zabbix/zabbix_server.conf\n13603 ?        S      0:19 /usr/sbin/zabbix_server: configuration syncer [synced configuration in 0.010576 sec, idle 60 sec]\n13604 ?        S      0:09 /usr/sbin/zabbix_server: db watchdog [synced alerts config in 0.000973 sec, idle 60 sec]\n13605 ?        S      0:13 /usr/sbin/zabbix_server: poller #1 [got 0 values in 0.000013 sec, idle 5 sec]\n13606 ?        S      0:13 /usr/sbin/zabbix_server: poller #2 [got 0 values in 0.000010 sec, idle 5 sec]\n13607 ?        S      0:13 /usr/sbin/zabbix_server: poller #3 [got 0 values in 0.000011 sec, idle 5 sec]\n13608 ?        S      0:13 /usr/sbin/zabbix_server: poller #4 [got 0 values in 0.000012 sec, idle 5 sec]\n13609 ?        S      0:12 /usr/sbin/zabbix_server: poller #5 [got 0 values in 0.000010 sec, idle 5 sec]\n13610 ?        S      0:15 /usr/sbin/zabbix_server: unreachable poller #1 [got 0 values in 0.000014 sec, idle 5 sec]\n13611 ?        S      0:00 /usr/sbin/zabbix_server: trapper #1 [processed data in 0.000008 sec, waiting for connection]\n13612 ?        S      0:00 /usr/sbin/zabbix_server: trapper #2 [processed data in 0.000015 sec, waiting for connection]\n13613 ?        S      0:00 /usr/sbin/zabbix_server: trapper #3 [processed data in 0.000009 sec, waiting for connection]\n13614 ?        S      0:00 /usr/sbin/zabbix_server: trapper #4 [processed data in 0.000009 sec, waiting for connection]\n13615 ?        S      0:00 /usr/sbin/zabbix_server: trapper #5 [processed data in 0.000020 sec, waiting for connection]\n13616 ?        S      0:10 /usr/sbin/zabbix_server: icmp pinger #1 [got 0 values in 0.000010 sec, idle 5 sec]\n13617 ?        S      0:08 /usr/sbin/zabbix_server: alerter [sent alerts: 0 success, 0 fail in 0.000221 sec, idle 30 sec]\n13618 ?        S      0:07 /usr/sbin/zabbix_server: housekeeper [deleted 0 hist/trends, 0 items/triggers, 0 events, 0 sessions, 0 alarms, 0 audit items in 0.032341 sec, idle for 1 hour(s)]\n13619 ?        S      0:11 /usr/sbin/zabbix_server: timer #1 [processed 1 triggers, 0 events in 0.000201 sec, 0 maintenances in 0.000686 sec, idle 30 sec]\n13620 ?        S      0:20 /usr/sbin/zabbix_server: http poller #1 [got 0 values in 0.000951 sec, idle 5 sec]\n13621 ?        S      0:08 /usr/sbin/zabbix_server: discoverer #1 [processed 0 rules in 0.001172 sec, idle 60 sec]\n13622 ?        S      0:22 /usr/sbin/zabbix_server: history syncer #1 [synced 0 items in 0.000004 sec, idle 1 sec]\n13623 ?        S      0:22 /usr/sbin/zabbix_server: history syncer #2 [synced 0 items in 0.000002 sec, idle 1 sec]\n13624 ?        S      0:22 /usr/sbin/zabbix_server: history syncer #3 [synced 0 items in 0.000002 sec, idle 1 sec]\n13625 ?        S      0:22 /usr/sbin/zabbix_server: history syncer #4 [synced 0 items in 0.000002 sec, idle 1 sec]\n13626 ?        S      0:30 /usr/sbin/zabbix_server: escalator #1 [processed 0 escalations in 0.000405 sec, idle 3 sec]\n13627 ?        S      0:11 /usr/sbin/zabbix_server: proxy poller #1 [exchanged data with 0 proxies in 0.000009 sec, idle 5 sec]\n13628 ?        S      0:22 /usr/sbin/zabbix_server: self-monitoring [processed data in 0.000011 sec, idle 1 sec]\n13629 ?        S      0:15 /usr/sbin/zabbix_server: task manager [processed 0 task(s) in 0.000139 sec, idle 5 sec]\n20539 pts/17   S+     0:00 grep --color=auto zabbix_server  La primera l\u00ednea del resultado nos permite ver que el binario ejecutable  zabbix_server  carga la configuraci\u00f3n de  /etc/zabbix/zabbix_server.conf .     Otros procesos a tomar en cuenta son el servidor HTTP Apache ( apache2 ) y la BD Mysql ( mysqld ).  El script  zabbix-server  acepta par\u00e1metros como  [start|stop|refresh]  para controlar el demonio.  El siguiente comando obtiene informaci\u00f3n del estado del servicio, por ejemplo su estado y desde cuando lleva arrancado:  $ service zabbix-server status",
            "title": "Demonio Zabbix"
        },
        {
            "location": "/server/problemas/#configuracion-servidor-zabbix-zabbix_serverconf",
            "text": "Par\u00e1metros:   ListenPort : Por defecto siempre ser\u00e1 10051 a no ser que lo cambiemos, normalmente no ser\u00e1 necesario cambiarlo a no ser que alg\u00fan otro servicio lo estuviera ocupando.  SourceIP : Direcci\u00f3n de red del servidor.  LogType : Sistema de logs (por defecto a fichero).  LogFile : Fichero de log normalmente  /var/log/zabbix/zabbix_server.log .   DebugLevel : Normalmente con valor 3 para guardar logs de warning y error, con prop\u00f3sitos de debugear alg\u00fan error podemos modificarlo a 4 o 5 para que muestre informaci\u00f3n detallada de la ejecuci\u00f3n del servidor.  PidFile : Archivo con el identificador del proceso del servidor, normalmente  /var/run/zabbix/zabbix_server.pid , si queremos ver el PID del proceso principal podemos hacerlo con  more /var/run/zabbix/zabbix_server.pid .   A continuaci\u00f3n especifica la conexi\u00f3n a la BD:  DBHost ,  DBName ,  DBSchema ,  DBUser  (normalmente 'zabbix'),  DBPassword  (en mi caso 'osboxes.org'),  DBSocket ,  DBPort  (en MySQL por defecto suele ser 3306).   El fichero sigue con otros par\u00e1metros avanzados que ire comentando en cada caso. Por ejemplo la variable  AlertScriptsPath  ser\u00e1 de gran inter\u00e9s ya que indica la ruta para definir scripts de alerta personalizados.",
            "title": "Configuraci\u00f3n servidor Zabbix zabbix_server.conf"
        },
        {
            "location": "/server/problemas/#logs-del-servidor-zabbix",
            "text": "osboxes@osboxes:~$ sudo  more /var/log/zabbix/zabbix_server.log",
            "title": "Logs del servidor Zabbix"
        },
        {
            "location": "/server/problemas/#frontent-php-y-apache",
            "text": "Zabbix usa Apache como servidor HTTP para administrar el servidor Zabbix desde un interface Web desarrollado con PHP.  En la ruta  /etc/zabbix/  se encuentran algunos archivos de inter\u00e9s.  /etc/zabbix/apache.conf : Fichero de configuraci\u00f3n de la Web para Apache. Las primeras l\u00edneas indican donde est\u00e1n los archivos del sitio Web en  /usr/share/zabbix .",
            "title": "Frontent PHP y Apache"
        },
        {
            "location": "/agente/win7_vbox/instalacion_agente_win7_vbox/",
            "text": "Descarga agente\n\n\nVoy a virtualizar una m\u00e1quina MS Win7 (x86) en VirtualBox para configurarlo como agente Zabbix. La buena noticia es que Microsoft ofrece la descarga de sistemas operativos virtualizados (Win7,Win81 y Win10) de forma gratuita en periodo de evaluaci\u00f3n de 90 pero sin ninguna restricci\u00f3n (\nenlace\n).\n\n\n\n\nVamos a descargar un agente precompilado (el binario o ejecutable final) para MS Win i386 \nzabbix_agents_3.4.6.win.zip\n de la Web oficial de Zabbix (\nenlace\n)  \n\n\n\n\nDespues de descargar y descomprimir los ficheros he creado una carpeta en el raiz 'C:\\zabbiz' y he copiado los ejecutables para win32 y el fichero de configuraci\u00f3n 'zabbix_agentd.win.conf'.\n\n\n\n\nFicheros:\n\n\n\n\nzabbix_agentd.win.conf\n: Fichero de texto plano que contiene la configuraci\u00f3n del agente y del servidor Zabbix con el que debe comunicar.\n\n\nzabbix_agentd.exe\n: Agente que podemos ejecutar de forma puntual o instalar como servicio de Win que se ejecute con el arranque del SO.\n\n\nzabbix_get.exe\n: Utilidad de l\u00ednea de comandos para obtener datos de un agente Zabbix (\nzabbix_get - Zabbix get utility\n).\n\n\nzabbix_sender.exe\n: Utilidad de l\u00ednea de comandos para mandar datos de monitorizaci\u00f3n a un servidor Zabbix (\nzabbix_sender - Zabbix sender utility\n). \n\n\n\n\nConfiguraci\u00f3n zabbix_agentd.win.conf\n\n\nPodemos ejecutar m\u00e1s de una instancia del agente Zabbix, antes de ejecutar por primera vez 'zabbix_agentd.exe' hay que configurar los par\u00e1metros m\u00ednimos en el archivo 'zabbix_agentd.win.conf' para que realize la conexi\u00f3n con el servidor.\n\n\n\n\nLogType=file\n.\n\n\nLogFile\n: Hacemos que apunte a \nLogFile=c:\\zabbix\\zabbix_agentd.log\n para poder analizar la ejecuci\u00f3n del agente, especialmente en caso de problemas.\n\n\nDebugLevel=5\n: Informaci\u00f3n detallada en los logs.\n\n\nSourceIP=192.168.221.107\n. Direcci\u00f3n IP de nuestra m\u00e1quina Win7 para conexiones salientes.\n\n\nEnableRemoteCommands=1\n. Permitir comandos remotos.\n\n\nLogRemoteCommands=1\n. Registrar comandos remotos como logs de warning.\n\n\n\n\nA continuaci\u00f3n el fichero tiene dos apartados dependiendo del comportamiento del \nagente\n.\n\n\n\n\nAgente pasivo '\npolling\n': El servidor Zabbix es quien interroga al agente, el agente procesa la petici\u00f3n y retorna el valor.\n\n\n\n\nServer=192.168.221.102\n: Nombre del host o direcci\u00f3n de red del servidor.\n\n\nListenPort=10050\n: Puerto local del agente donde \"escuchar\u00e1\" las conexiones entrantes del servidor.\n\n\nListenIP=192.168.221.107\n: IP local del agente.\n\n\n\n\nAgente activo '\ntrapping\n': El agente solicita al servidor una lista de checks activos. El agente remite esta informaci\u00f3n de forma peri\u00f3dica al servidor.  \n\n\n\n\nServerActive=192.168.221.102\n.\n\n\nHostname=IE8WIN7\n: Nombre de host del agente (\ndebe coincidir con el nombre configurado en el servidor\n).\n\n\n\n\nPrimera ejecuci\u00f3n\n\n\nCon la configuraci\u00f3n b\u00e1sica realizada es el momento de ejecutar el agente por l\u00ednea de comandos para probarlo:\n\n\nc:\\zabbix>zabbix_agentd.exe -c c:\\zabbix\\zabbix_agentd.win.conf -f\n\n\n\n\nPara poder visualizar el agente debemos a\u00f1adirlo como host en el frontend Web del servidor Zabbix\n.\n\n\nEnlaces externos\n\n\n\n\n4 Zabbix agent (Windows)\n: he parameters supported in a Zabbix agent (Windows) configuration file.",
            "title": "Instalaci\u00f3n: Agente Win7 en VBox"
        },
        {
            "location": "/agente/win7_vbox/instalacion_agente_win7_vbox/#descarga-agente",
            "text": "Voy a virtualizar una m\u00e1quina MS Win7 (x86) en VirtualBox para configurarlo como agente Zabbix. La buena noticia es que Microsoft ofrece la descarga de sistemas operativos virtualizados (Win7,Win81 y Win10) de forma gratuita en periodo de evaluaci\u00f3n de 90 pero sin ninguna restricci\u00f3n ( enlace ).   Vamos a descargar un agente precompilado (el binario o ejecutable final) para MS Win i386  zabbix_agents_3.4.6.win.zip  de la Web oficial de Zabbix ( enlace )     Despues de descargar y descomprimir los ficheros he creado una carpeta en el raiz 'C:\\zabbiz' y he copiado los ejecutables para win32 y el fichero de configuraci\u00f3n 'zabbix_agentd.win.conf'.   Ficheros:   zabbix_agentd.win.conf : Fichero de texto plano que contiene la configuraci\u00f3n del agente y del servidor Zabbix con el que debe comunicar.  zabbix_agentd.exe : Agente que podemos ejecutar de forma puntual o instalar como servicio de Win que se ejecute con el arranque del SO.  zabbix_get.exe : Utilidad de l\u00ednea de comandos para obtener datos de un agente Zabbix ( zabbix_get - Zabbix get utility ).  zabbix_sender.exe : Utilidad de l\u00ednea de comandos para mandar datos de monitorizaci\u00f3n a un servidor Zabbix ( zabbix_sender - Zabbix sender utility ).",
            "title": "Descarga agente"
        },
        {
            "location": "/agente/win7_vbox/instalacion_agente_win7_vbox/#configuracion-zabbix_agentdwinconf",
            "text": "Podemos ejecutar m\u00e1s de una instancia del agente Zabbix, antes de ejecutar por primera vez 'zabbix_agentd.exe' hay que configurar los par\u00e1metros m\u00ednimos en el archivo 'zabbix_agentd.win.conf' para que realize la conexi\u00f3n con el servidor.   LogType=file .  LogFile : Hacemos que apunte a  LogFile=c:\\zabbix\\zabbix_agentd.log  para poder analizar la ejecuci\u00f3n del agente, especialmente en caso de problemas.  DebugLevel=5 : Informaci\u00f3n detallada en los logs.  SourceIP=192.168.221.107 . Direcci\u00f3n IP de nuestra m\u00e1quina Win7 para conexiones salientes.  EnableRemoteCommands=1 . Permitir comandos remotos.  LogRemoteCommands=1 . Registrar comandos remotos como logs de warning.   A continuaci\u00f3n el fichero tiene dos apartados dependiendo del comportamiento del  agente .   Agente pasivo ' polling ': El servidor Zabbix es quien interroga al agente, el agente procesa la petici\u00f3n y retorna el valor.   Server=192.168.221.102 : Nombre del host o direcci\u00f3n de red del servidor.  ListenPort=10050 : Puerto local del agente donde \"escuchar\u00e1\" las conexiones entrantes del servidor.  ListenIP=192.168.221.107 : IP local del agente.   Agente activo ' trapping ': El agente solicita al servidor una lista de checks activos. El agente remite esta informaci\u00f3n de forma peri\u00f3dica al servidor.     ServerActive=192.168.221.102 .  Hostname=IE8WIN7 : Nombre de host del agente ( debe coincidir con el nombre configurado en el servidor ).",
            "title": "Configuraci\u00f3n zabbix_agentd.win.conf"
        },
        {
            "location": "/agente/win7_vbox/instalacion_agente_win7_vbox/#primera-ejecucion",
            "text": "Con la configuraci\u00f3n b\u00e1sica realizada es el momento de ejecutar el agente por l\u00ednea de comandos para probarlo:  c:\\zabbix>zabbix_agentd.exe -c c:\\zabbix\\zabbix_agentd.win.conf -f  Para poder visualizar el agente debemos a\u00f1adirlo como host en el frontend Web del servidor Zabbix .",
            "title": "Primera ejecuci\u00f3n"
        },
        {
            "location": "/agente/win7_vbox/instalacion_agente_win7_vbox/#enlaces-externos",
            "text": "4 Zabbix agent (Windows) : he parameters supported in a Zabbix agent (Windows) configuration file.",
            "title": "Enlaces externos"
        }
    ]
}